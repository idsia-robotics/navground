name: Create a release
on:
  workflow_call:
    inputs:
      run-id:
        type: string
        default: ${{github.run_id}}
  workflow_dispatch:
    inputs:
      run-id:
        type: string
        description: The run id
jobs:
  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release, together with
      the unsigned C++ library packages
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: dist
          merge-multiple: true
          github-token: ${{ secrets.GH_PAT }}
          run-id: ${{ inputs.run-id }}
      - uses: actions/download-artifact@v4
        with:
          pattern: packages-*
          path: packages
          merge-multiple: true
          github-token: ${{ secrets.GH_PAT }}
          run-id: ${{ inputs.run-id }}
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload wheels and signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
      - name: Upload packages to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' packages/**
          --repo '${{ github.repository }}'
