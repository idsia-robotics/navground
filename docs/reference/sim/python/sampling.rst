.. _sampling_py:

=========
Sampling
=========

We partially expose to Python the class :cpp:class:`navground::sim::PropertySampler`, which generates values of type :py:type:`navground.core.PropertyField`: booleans, integers, floating-point numbers, strings, 2D vectors, and list of these scalar types.


.. autoclass:: navground.sim.Sampler
   :members:
   :exclude-members: __init__

.. autofunction:: navground.sim.load_sampler

Samplers cannot be introspected and modified from Python but can be loaded from YAML:

.. code-block:: python

   >>> from navground import sim

   >>> sampler = sim.load_sampler("{sampler: uniform, from: 1, to: 10}", type_name="int")
   >>> sampler
   <Sampler: int>

.. note::

   It requires the samples type name, i.e., one of ``"bool"``, ``"int"``, ``"float"``, ``"vector"``, ``"str"``, ``"[bool]"``, ``"[int]"``, ``"[float]"``, ``"[vector]"``, ``"[str]"``.

Samples can then be generated by passing a world, whose random generator is need to generate random numbers:

.. code-block:: python

   >>> world = sim.World()
   >>> world.seed = 123
   >>> sampler.sample(w)
   2


.. note::

   :cpp:class:`navground::sim::PropertySampler` is used internally to implement :cpp:func:`navground::sim::Scenario::init_world`, which
   samples a world from a YAML representation containing such samplers.

   The main utility of :py:class:`navground.sim.Sampler` is instead for testing. Although it could be used to implement :py:meth:`navground.sim.Scenario.init_world` for new scenarios, in Python there are  alternative random generators. In particular, :py:class:`numpy.random.Generator` is also exposed in navground.
   For example, the uniform sampling in the example above could be
   implemented using ``numpy`` as

   .. code-block:: python

      >>> world = sim.World()
      >>> world.seed = 123
      >>> world.random_generator.integers(low=0, high=10)
      0


Agents
======

.. autoclass:: navground.sim.AgentSampler
   :members:
   :exclude-members: __init__, __new__

.. autofunction:: navground.sim.load_group
    




