name: Test C++
on:
  workflow_call:
    inputs:
      run-id:
        type: string
        default: ${{github.run_id}}
  workflow_dispatch:
    inputs:
      run-id:
        type: string
        description: The run id
jobs:
  test_cpp:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - ubuntu-latest
          - ubuntu-24.04-arm
          - windows-latest
          - macos-latest
          - macos-13
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: src
          sparse-checkout: |
            navground_examples
            navground_examples_yaml
      - name: download navground
        uses: actions/download-artifact@v4
        with:
          name: packages-${{ runner.os }}-${{ runner.arch }}
          path: packages
          github-token: ${{ secrets.GH_PAT }}
          run-id: ${{ inputs.run-id }}
      - name: install navground
        if: runner.os == 'Windows'
        run: |
          Get-ChildItem -Path .\packages -File "*.exe" | Foreach {Start-Process $_.FullName /S}
      - name: install navground
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y ./packages/*.deb
      - name: install navground
        if: runner.os == 'macOS'
        run: |
          sudo installer -allowUntrusted -verboseR -pkg packages/*.pkg -target /
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: install colcon
        run: pip install colcon-common-extensions
      - uses: ilammy/msvc-dev-cmd@v1
      - name: build examples
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          colcon build --merge-install --event-handlers desktop_notification- --packages-select navground_examples navground_examples_yaml
      - name: build examples
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          colcon build --merge-install --event-handlers desktop_notification- --packages-select navground_examples navground_examples_yaml
      - name: test info
        env:
          NAVGROUND_PLUGINS_PREFIX: ${{ github.workspace }}/install
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          source install/setup.bash
          navground info --build --properties
      - name: test info
        env:
          NAVGROUND_PLUGINS_PREFIX: ${{ github.workspace }}\install
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground info --build --properties
      - name: test plugins
        env:
          NAVGROUND_PLUGINS_PREFIX: ${{ github.workspace }}/install
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          navground plugins --dependencies
      - name: test plugins
        env:
          NAVGROUND_PLUGINS_PREFIX: ${{ github.workspace }}\install
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground plugins --dependencies
      - name: test schema
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          navground schema sim
      - name: test schema
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground schema sim
      - name: test echo
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          navground echo behavior "{type: Dummy}"
      - name: test echo
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground echo behavior "{type: Dummy}"
      - name: test sample
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          navground sample "{type: Cross, groups: [{number: 10, behavior: {type: Dummy}}]}"
      - name: test sample
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground sample "{type: Cross, groups: [{number: 10, behavior: {type: Dummy}}]}"
      - name: test run
        if: runner.os != 'Windows'
        run: |
          source /opt/navground/setup.bash
          navground run install/share/navground_examples_yaml/experiment/cross.yaml
          navground run install/share/navground_examples_yaml/experiment/corridor.yaml --save_directory "."
          navground run install/share/navground_examples_yaml/experiment/cross_torus.yaml --runs 2 --run_index 1001 --chdir
          navground run install/share/navground_examples_yaml/experiment/antipodal.yaml --threads 2 --runs 10 --tqdm
      - name: test run
        if: runner.os == 'Windows'
        run: |
          & 'C:\Program Files\navground\setup.ps1'
          navground run install/share/navground_examples_yaml/experiment/cross.yaml
          navground run install/share/navground_examples_yaml/experiment/corridor.yaml --save_directory "."
          navground run install/share/navground_examples_yaml/experiment/cross_torus.yaml --runs 2 --run_index 1001 --chdir
          navground run install/share/navground_examples_yaml/experiment/antipodal.yaml --threads 2 --runs 10 --tqdm