$defs:
  agent:
    $id: http://navground/agent
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      angular_speed:
        type: number
      behavior:
        $ref: behavior
      color:
        type: string
      control_period:
        minimum: 0
        type: number
      external:
        type: boolean
      id:
        minimum: 0
        type: integer
      kinematics:
        $ref: kinematics
      orientation:
        type: number
      position:
        $ref: vector2
      radius:
        type: number
      speed_tolerance:
        minimum: 0
        type: number
      state_estimation:
        $ref: state_estimation
      tags:
        items:
          type: string
        type: array
      task:
        $ref: task
      type:
        type: string
      uid:
        minimum: 0
        type: integer
      velocity:
        $ref: vector2
    type: object
  behavior:
    $id: http://navground/behavior
    $ref: behavior_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      heading:
        enum:
        - target_point
        - target_angle
        - target_angular_speed
        - velocity
        - idle
      horizon:
        minimum: 0
        type: number
      kinematics:
        $ref: kinematics
      modulations:
        items:
          $ref: behavior_modulation
        type: array
      optimal_angular_speed:
        minimum: 0
        type: number
      optimal_speed:
        minimum: 0
        type: number
      path_look_ahead:
        minimum: 0
        type: number
      path_tau:
        minimum: 0
        type: number
      radius:
        minimum: 0
        type: number
      rotation_tau:
        minimum: 0
        type: number
      safety_margin:
        minimum: 0
        type: number
      social_margin:
        properties:
          default:
            type: number
          modulation:
            properties:
              type:
                enum:
                - zero
                - constant
                - linear
                - quadratic
                - logistic
              upper:
                minimum: 0
                type: number
            type: object
            unevaluatedProperties: false
          values:
            type: object
        type: object
        unevaluatedProperties: false
      type:
        type: string
    type: object
    unevaluatedProperties: false
  behavior_modulation:
    $id: http://navground/behavior_modulation
    $ref: behavior_modulation_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      enabled:
        type: boolean
      type:
        type: string
    type: object
    unevaluatedProperties: false
  behavior_modulation_register:
    $id: http://navground/behavior_modulation_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_acceleration:
          default: .inf
          description: Maximal acceleration
          type: number
        max_angular_acceleration:
          default: .inf
          description: Maximal angular acceleration
          type: number
        type:
          const: LimitAcceleration
    - properties:
        angular:
          default: .inf
          description: Maximal angular speed
          type: number
        backward:
          default: .inf
          description: Maximal backward speed
          type: number
        forward:
          default: .inf
          description: Maximal forward speed
          type: number
        leftward:
          default: .inf
          description: Maximal leftward speed
          type: number
        rightward:
          default: .inf
          description: Maximal rightward speed
          type: number
        type:
          const: LimitTwist
    - properties:
        k_d:
          default: 0
          description: D
          type: number
        k_i:
          default: 0
          description: I
          type: number
        k_p:
          default: 1
          description: P
          type: number
        type:
          const: MotorPID
    - properties:
        tau:
          default: 0.125
          description: Tau
          minimum: 0
          type: number
        type:
          const: Relaxation
  behavior_modulation_sampler:
    $id: http://navground/behavior_modulation_sampler
    $ref: behavior_modulation_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      enabled:
        $ref: boolean_sampler
      type:
        type: string
    type: object
    unevaluatedProperties: false
  behavior_modulation_sampler_register:
    $id: http://navground/behavior_modulation_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_acceleration:
          $ref: number_sampler
        max_angular_acceleration:
          $ref: number_sampler
        type:
          const: LimitAcceleration
    - properties:
        angular:
          $ref: number_sampler
        backward:
          $ref: number_sampler
        forward:
          $ref: number_sampler
        leftward:
          $ref: number_sampler
        rightward:
          $ref: number_sampler
        type:
          const: LimitTwist
    - properties:
        k_d:
          $ref: number_sampler
        k_i:
          $ref: number_sampler
        k_p:
          $ref: number_sampler
        type:
          const: MotorPID
    - properties:
        tau:
          $ref: number_sampler
        type:
          const: Relaxation
  behavior_register:
    $id: http://navground/behavior_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        type:
          const: ''
    - properties:
        type:
          const: Dummy
    - properties:
        aperture:
          default: 3.14159274
          description: Aperture angle
          minimum: 0
          type: number
        barrier_angle:
          default: 1.57079637
          description: Barrier angle
          minimum: 0
          type: number
        epsilon:
          default: 0
          description: Epsilon
          type: number
        eta:
          default: 0.5
          description: Eta
          exclusiveMinimum: 0
          type: number
        resolution:
          default: 101
          description: Resolution
          exclusiveMinimum: 0
          type: integer
        tau:
          default: 0.125
          description: Tau
          minimum: 0
          type: number
        type:
          const: HL
    - properties:
        max_neighbors:
          default: 1000
          description: The maximal number of [HRVO] neighbors
          minimum: 0
          type: integer
        type:
          const: HRVO
        uncertainty_offset:
          default: 0
          description: Uncertainty offset
          type: integer
    - properties:
        ignore_obstacles:
          default: false
          description: whether to move towards the target, ignoring obstacles
          type: boolean
        type:
          const: Idle
    - properties:
        effective_center:
          default: false
          description: Whenever to use an effective center to handle non-holonomic
            kinematics
          type: boolean
        max_neighbors:
          default: 1000
          description: The maximal number of [RVO] neighbors
          minimum: 0
          type: integer
        static_time_horizon:
          default: 10
          description: Time horizon applied to static linear obstacles
          minimum: 0
          type: number
        time_horizon:
          default: 10
          description: Time horizon
          minimum: 0
          type: number
        treat_obstacles_as_agents:
          default: true
          description: Whenever to treat static obstacles as static [RVO] agents
          type: boolean
        type:
          const: ORCA
    - properties:
        model_path:
          default: ''
          description: model path
          type: string
        type:
          const: PyDnnLna
    - properties:
        dummy:
          description: Am I dummy?
          readOnly: true
          type: boolean
        tired:
          default: false
          description: Am I tired?
          type: boolean
        type:
          const: PyDummy
    - properties:
        ignore_obstacles:
          default: false
          description: whether to move towards the target, ignoring obstacles
          type: boolean
        type:
          const: PyIdle
    - properties:
        c:
          default: 0.5
          description: Weight of 'non-in-sight' forces
          minimum: 0
          type: number
        phi:
          default: 1.75
          description: Field of sight half-length
          type: number
        step_duration:
          default: 1
          description: Step duration
          minimum: 0
          type: number
        tau:
          default: 0.5
          description: Relaxation time
          minimum: 0
          type: number
        type:
          const: SocialForce
        u_a:
          default: 10
          description: Obstacles potential amplitude
          type: number
        u_r:
          default: 0.200000003
          description: Obstacles potential length scale
          minimum: 0
          type: number
        v_a:
          default: 2.0999999
          description: Neighbors potential amplitude
          type: number
        v_r:
          default: 0.300000012
          description: Neighbors potential length scale
          minimum: 0
          type: number
  behavior_sampler:
    $id: http://navground/behavior_sampler
    $ref: behavior_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      heading:
        $ref: string_sampler
      horizon:
        $ref: positive_number_sampler
      modulations:
        items:
          $ref: behavior_modulation_sampler
        type: array
      optimal_angular_speed:
        $ref: positive_number_sampler
      optimal_speed:
        $ref: positive_number_sampler
      path_look_ahead:
        $ref: positive_number_sampler
      path_tau:
        $ref: positive_number_sampler
      rotation_tau:
        $ref: positive_number_sampler
      safety_margin:
        $ref: positive_number_sampler
      type:
        type: string
    type: object
    unevaluatedProperties: false
  behavior_sampler_register:
    $id: http://navground/behavior_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        type:
          const: ''
    - properties:
        type:
          const: Dummy
    - properties:
        aperture:
          $ref: number_sampler
        barrier_angle:
          $ref: number_sampler
        epsilon:
          $ref: number_sampler
        eta:
          $ref: number_sampler
        resolution:
          $ref: integer_sampler
        tau:
          $ref: number_sampler
        type:
          const: HL
    - properties:
        max_neighbors:
          $ref: integer_sampler
        type:
          const: HRVO
        uncertainty_offset:
          $ref: integer_sampler
    - properties:
        ignore_obstacles:
          $ref: boolean_sampler
        type:
          const: Idle
    - properties:
        effective_center:
          $ref: boolean_sampler
        max_neighbors:
          $ref: integer_sampler
        static_time_horizon:
          $ref: number_sampler
        time_horizon:
          $ref: number_sampler
        treat_obstacles_as_agents:
          $ref: boolean_sampler
        type:
          const: ORCA
    - properties:
        model_path:
          $ref: string_sampler
        type:
          const: PyDnnLna
    - properties:
        dummy:
          $ref: boolean_sampler
        tired:
          $ref: boolean_sampler
        type:
          const: PyDummy
    - properties:
        ignore_obstacles:
          $ref: boolean_sampler
        type:
          const: PyIdle
    - properties:
        c:
          $ref: number_sampler
        phi:
          $ref: number_sampler
        step_duration:
          $ref: number_sampler
        tau:
          $ref: number_sampler
        type:
          const: SocialForce
        u_a:
          $ref: number_sampler
        u_r:
          $ref: number_sampler
        v_a:
          $ref: number_sampler
        v_r:
          $ref: number_sampler
  boolean_array_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          type: boolean
        type: array
    $id: http://navground/boolean_array_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  boolean_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        type: boolean
    $id: http://navground/boolean_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  choice_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/choice
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      once:
        type: boolean
      sampler:
        const: choice
      values:
        items:
          $dynamicRef: '#T'
          minItems: 1
        type: array
    required:
    - sampler
    - values
    type: object
  const_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/const
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $dynamicRef: '#T'
    - additionalProperties: false
      properties:
        once:
          type: boolean
        sampler:
          const: const
        value:
          $dynamicRef: '#T'
      required:
      - sampler
      - value
      type: object
  disc:
    $id: http://navground/disc
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      position:
        $ref: vector2
      radius:
        minimum: 0
        type: number
    type: object
    unevaluatedProperties: false
  experiment:
    $id: http://navground/experiment
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      name:
        type: string
      record_actuated_cmd:
        type: boolean
      record_cmd:
        type: boolean
      record_collisions:
        type: boolean
      record_deadlocks:
        type: boolean
      record_efficacy:
        type: boolean
      record_neighbors:
        $ref: record_neighbors_config
      record_pose:
        type: boolean
      record_safety_violation:
        type: boolean
      record_sensing:
        $ref: record_sensing_config
      record_target:
        type: boolean
      record_task_events:
        type: boolean
      record_time:
        type: boolean
      record_twist:
        type: boolean
      record_world:
        type: boolean
      reset_uids:
        type: boolean
      run_index:
        minimum: 0
        type: integer
      runs:
        minimum: 0
        type: integer
      save_directory:
        type: string
      scenario:
        $ref: scenario
      steps:
        minimum: 0
        type: integer
      terminate_when_all_idle_or_stuck:
        type: boolean
      time_step:
        minimum: 0
        type: number
      use_agent_uid_as_key:
        type: boolean
    type: object
  grid_sampler:
    $id: http://navground/grid
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      from:
        $ref: vector2
      numbers:
        items:
          minimum: 0
          type: integer
        maxItems: 2
        minItems: 2
        type: array
      once:
        type: boolean
      sampler:
        const: grid
      step:
        $ref: vector2
      to:
        $ref: vector2
      wrap:
        enum:
        - terminate
        - repeat
        - loop
    required:
    - sampler
    - from
    - to
    - numbers
    type: object
  group:
    $id: http://navground/group
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      behavior:
        $ref: behavior_sampler
      color:
        $ref: string_array_sampler
      control_period:
        $ref: positive_number_sampler
      id:
        $ref: positive_integer_sampler
      kinematics:
        $ref: kinematics_sampler
      name:
        $ref: string_sampler
      number:
        $ref: positive_integer_sampler
      orientation:
        $ref: number_sampler
      position:
        $ref: vector2_sampler
      radius:
        $ref: positive_number_sampler
      speed_tolerance:
        $ref: positive_number_sampler
      state_estimation:
        $ref: state_estimation_sampler
      tags:
        $ref: string_sampler
      task:
        $ref: task_sampler
      type:
        $ref: string_sampler
    type: object
  integer_array_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          type: integer
        type: array
    $id: http://navground/integer_array_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  integer_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        type: integer
    $id: http://navground/integer_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
    - $ref: regular
    - $ref: uniform
    - $ref: normal
  kinematics:
    $id: http://navground/kinematics
    $ref: kinematics_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      max_angular_speed:
        type: number
      max_speed:
        type: number
      type:
        type: string
    type: object
    unevaluatedProperties: false
  kinematics_register:
    $id: http://navground/kinematics_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_backward_speed:
          default: .inf
          description: Maximal backward linear speed
          type: number
        max_forward_speed:
          default: .inf
          description: Maximal forward linear speed
          type: number
        type:
          const: 2WDiff
        wheel_axis:
          default: 1
          description: Wheel Axis
          minimum: 0
          type: number
    - properties:
        max_acceleration:
          default: 0
          description: Maximal acceleration
          minimum: 0
          type: number
        max_backward_speed:
          default: .inf
          description: Maximal backward linear speed
          type: number
        max_forward_speed:
          default: .inf
          description: Maximal forward linear speed
          type: number
        moi:
          default: 1
          description: Scaled moment of inertia
          minimum: 0
          type: number
        type:
          const: 2WDiffDyn
        wheel_axis:
          default: 1
          description: Wheel Axis
          minimum: 0
          type: number
    - properties:
        type:
          const: 4WOmni
        wheel_axis:
          default: 1
          description: Wheel Axis
          minimum: 0
          type: number
    - properties:
        type:
          const: Ahead
    - properties:
        type:
          const: Omni
  kinematics_sampler:
    $id: http://navground/kinematics_sampler
    $ref: kinematics_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      max_angular_speed:
        $ref: number_sampler
      max_speed:
        $ref: number_sampler
      type:
        type: string
    type: object
    unevaluatedProperties: false
  kinematics_sampler_register:
    $id: http://navground/kinematics_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_backward_speed:
          $ref: number_sampler
        max_forward_speed:
          $ref: number_sampler
        type:
          const: 2WDiff
        wheel_axis:
          $ref: number_sampler
    - properties:
        max_acceleration:
          $ref: number_sampler
        max_backward_speed:
          $ref: number_sampler
        max_forward_speed:
          $ref: number_sampler
        moi:
          $ref: number_sampler
        type:
          const: 2WDiffDyn
        wheel_axis:
          $ref: number_sampler
    - properties:
        type:
          const: 4WOmni
        wheel_axis:
          $ref: number_sampler
    - properties:
        type:
          const: Ahead
    - properties:
        type:
          const: Omni
  line_segment:
    $id: http://navground/line_segment
    $schema: https://json-schema.org/draft/2020-12/schema
    items:
      $ref: vector2
    maxItems: 2
    minItems: 2
    type: array
  neighbor:
    $id: http://navground/neighbor
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      id:
        minimum: 0
        type: integer
      position:
        $ref: vector2
      radius:
        minimum: 0
        type: number
      velocity:
        $ref: vector2
    type: object
    unevaluatedProperties: false
  normal_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/normal
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      clamp:
        type: boolean
      max:
        $dynamicRef: '#T'
      mean:
        type: number
      min:
        $dynamicRef: '#T'
      once:
        type: boolean
      sampler:
        const: normal
      std_dev:
        minimum: 0
        type: number
    required:
    - sampler
    - mean
    - std_dev
    type: object
  number_array_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          type: number
        type: array
    $id: http://navground/number_array_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  number_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        type: number
    $id: http://navground/number_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
    - $ref: regular
    - $ref: uniform
    - $ref: normal
  obstacle:
    $id: http://navground/obstacle
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      position:
        $ref: vector2
      radius:
        minimum: 0
        type: number
      uid:
        type: integer
    type: object
    unevaluatedProperties: false
  positive_integer_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        minimum: 0
        type: integer
    $id: http://navground/positive_integer_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
    - $ref: regular
    - $ref: uniform
    - $ref: normal
  positive_number_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        minimum: 0
        type: number
    $id: http://navground/positive_number_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
    - $ref: regular
    - $ref: uniform
    - $ref: normal
  record_neighbors_config:
    $id: http://navground/record_neighbors_config
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      number:
        minimum: 0
        type: integer
      relative:
        type: boolean
    type: object
  record_sensing_config:
    $id: http://navground/record_sensing_config
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      agent_indices:
        items:
          type: integer
        type: array
      name:
        type: string
      sensor:
        $ref: state_estimation
    type: object
  regular_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/regular
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      from:
        $dynamicRef: '#T'
      number:
        minimum: 0
        type: integer
      once:
        type: boolean
      sampler:
        const: regular
      step:
        $dynamicRef: '#T'
      to:
        $dynamicRef: '#T'
      wrap:
        enum:
        - terminate
        - repeat
        - loop
    required:
    - sampler
    - from
    - to
    type: object
  scenario:
    $id: http://navground/scenario
    $ref: scenario_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      bounding_box:
        $ref: bounding_box
      groups:
        items:
          $ref: group
        type: array
      obstacles:
        items:
          $ref: obstacle
        type: array
      walls:
        items:
          $ref: wall
        type: array
    type: object
    unevaluatedProperties: false
  scenario_register:
    $id: http://navground/scenario_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        orientation_noise:
          $ref: number_sampler
        position_noise:
          $ref: number_sampler
        radius:
          $ref: number_sampler
        shuffle:
          $ref: number_sampler
        tolerance:
          $ref: number_sampler
        type:
          const: Antipodal
    - properties:
        height:
          $ref: number_sampler
        type:
          const: CarlaCoffeeBreakScenario
        width:
          $ref: number_sampler
    - properties:
        length:
          $ref: number_sampler
        max_delta_y:
          $ref: number_sampler
        max_gap_x:
          $ref: number_sampler
        min_delta_y:
          $ref: number_sampler
        min_final_wheelchair_human_gap:
          $ref: number_sampler
        min_gap_x:
          $ref: number_sampler
        min_initial_wheelchair_human_gap:
          $ref: number_sampler
        number_of_groups:
          $ref: integer_sampler
        type:
          const: CarlaCorridorAutomaticGrouping
        width:
          $ref: number_sampler
    - properties:
        length:
          $ref: number_sampler
        min_final_wheelchair_human_gap:
          $ref: number_sampler
        type:
          const: CarlaCorridorPredefinedGrouping
        width:
          $ref: number_sampler
    - properties:
        add_safety_to_agent_margin:
          $ref: boolean_sampler
        agent_margin:
          $ref: number_sampler
        length:
          $ref: number_sampler
        type:
          const: Corridor
        width:
          $ref: number_sampler
    - properties:
        add_safety_to_agent_margin:
          $ref: boolean_sampler
        agent_margin:
          $ref: number_sampler
        side:
          $ref: number_sampler
        target_margin:
          $ref: number_sampler
        tolerance:
          $ref: number_sampler
        type:
          const: Cross
    - properties:
        add_safety_to_agent_margin:
          $ref: boolean_sampler
        agent_margin:
          $ref: number_sampler
        side:
          $ref: number_sampler
        type:
          const: CrossTorus
    - properties:
        corridor_width:
          $ref: number_sampler
        size:
          $ref: number_sampler
        type:
          const: Eight
    - properties:
        type:
          const: Empty
    - properties:
        map_path:
          $ref: string_sampler
        map_scale:
          $ref: number_sampler
        type:
          const: IndoorGML
    - properties:
        behavior_type:
          $ref: string_sampler
        type:
          const: PyThymioDemo
    - properties:
        type:
          const: Simple
    - properties:
        length:
          $ref: number_sampler
        type:
          const: StayInTheMiddleCorridor
        width:
          $ref: number_sampler
  sequence_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/sequence
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - items:
        $dynamicRef: '#T'
      minItems: 1
      type: array
    - additionalProperties: false
      properties:
        once:
          type: boolean
        sampler:
          const: sequence
        values:
          items:
            $dynamicRef: '#T'
          minItems: 1
          type: array
        wrap:
          enum:
          - terminate
          - repeat
          - loop
      required:
      - sampler
      - values
      type: object
  state_estimation:
    $id: http://navground/state_estimation
    $ref: state_estimation_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      type:
        type: string
    type: object
    unevaluatedProperties: false
  state_estimation_register:
    $id: http://navground/state_estimation_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_x:
          default: .inf
          description: Boundary max x
          type: number
        max_y:
          default: .inf
          description: Boundary max y
          type: number
        min_x:
          default: -.inf
          description: Boundary min x
          type: number
        min_y:
          default: -.inf
          description: Boundary min y
          type: number
        name:
          default: ''
          description: Name
          type: string
        range:
          default: 1
          description: Maximal range
          minimum: 0
          type: number
        type:
          const: Boundary
    - properties:
        range:
          default: 1
          description: Maximal range (< 0 =infinite)
          type: number
        type:
          const: Bounded
        update_static_obstacles:
          default: false
          description: Whether to update static obstacles
          type: boolean
    - properties:
        type:
          const: Combination
    - properties:
        include_valid:
          default: true
          description: Include validity field
          type: boolean
        max_id:
          default: 0
          description: The maximal possible id
          minimum: 0
          type: integer
        max_radius:
          default: 0
          description: Maximal radius
          minimum: 0
          type: number
        max_speed:
          default: 0
          description: Maximal speed
          minimum: 0
          type: number
        name:
          default: ''
          description: Name
          type: string
        number:
          default: 1
          description: Number
          minimum: 0
          type: integer
        range:
          default: 1
          description: Maximal range
          minimum: 0
          type: number
        type:
          const: Discs
        use_nearest_point:
          default: true
          description: Whether to use the nearest point as position
          type: boolean
    - properties:
        error_bias:
          default: 0
          description: Error bias
          minimum: 0
          type: number
        error_std_dev:
          default: 0
          description: Error standard deviation
          minimum: 0
          type: number
        field_of_view:
          default: 6.28318548
          description: Total angle
          minimum: 0
          type: number
        name:
          default: ''
          description: Name
          type: string
        position:
          default:
          - 0
          - 0
          description: Relative position
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        range:
          default: 1
          description: Maximal range
          minimum: 0
          type: number
        resolution:
          default: 100
          description: Resolution
          exclusiveMinimum: 0
          type: integer
        start_angle:
          default: -3.14159274
          description: Start angle
          type: number
        type:
          const: Lidar
    - properties:
        angular_speed_bias:
          default: 0
          description: Angular speed bias
          type: number
        angular_speed_std_dev:
          default: 0
          description: Angular speed standard deviation
          minimum: 0
          type: number
        longitudinal_speed_bias:
          default: 0
          description: Longitudinal speed bias
          type: number
        longitudinal_speed_std_dev:
          default: 0
          description: Longitudinal speed standard deviation
          minimum: 0
          type: number
        name:
          default: ''
          description: Name
          type: string
        transversal_speed_bias:
          default: 0
          description: Transversal speed bias
          type: number
        transversal_speed_std_dev:
          default: 0
          description: Transversal speed standard deviation
          minimum: 0
          type: number
        type:
          const: Odometry
        update_ego_state:
          default: false
          description: Whether to update the behavior ego state
          type: boolean
        update_sensing_state:
          default: true
          description: Whether to update the behavior sensing state
          type: boolean
    - properties:
        field_of_view:
          default: 6.28318548
          description: Field of view
          minimum: 0
          type: number
        range:
          default: 4
          description: Range
          minimum: 0
          type: number
        resolution:
          default: 11
          description: Resolution
          exclusiveMinimum: 0
          type: integer
        start_angle:
          default: -3.14159274
          description: Start angle
          type: number
        type:
          const: pyLidar
  state_estimation_sampler:
    $id: http://navground/state_estimation_sampler
    $ref: state_estimation_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    type: object
    unevaluatedProperties: false
  state_estimation_sampler_register:
    $id: http://navground/state_estimation_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        max_x:
          $ref: number_sampler
        max_y:
          $ref: number_sampler
        min_x:
          $ref: number_sampler
        min_y:
          $ref: number_sampler
        name:
          $ref: string_sampler
        range:
          $ref: number_sampler
        type:
          const: Boundary
    - properties:
        range:
          $ref: number_sampler
        type:
          const: Bounded
        update_static_obstacles:
          $ref: boolean_sampler
    - properties:
        type:
          const: Combination
    - properties:
        include_valid:
          $ref: boolean_sampler
        max_id:
          $ref: integer_sampler
        max_radius:
          $ref: number_sampler
        max_speed:
          $ref: number_sampler
        name:
          $ref: string_sampler
        number:
          $ref: integer_sampler
        range:
          $ref: number_sampler
        type:
          const: Discs
        use_nearest_point:
          $ref: boolean_sampler
    - properties:
        error_bias:
          $ref: number_sampler
        error_std_dev:
          $ref: number_sampler
        field_of_view:
          $ref: number_sampler
        name:
          $ref: string_sampler
        position:
          $ref: vector2_sampler
        range:
          $ref: number_sampler
        resolution:
          $ref: integer_sampler
        start_angle:
          $ref: number_sampler
        type:
          const: Lidar
    - properties:
        angular_speed_bias:
          $ref: number_sampler
        angular_speed_std_dev:
          $ref: number_sampler
        longitudinal_speed_bias:
          $ref: number_sampler
        longitudinal_speed_std_dev:
          $ref: number_sampler
        name:
          $ref: string_sampler
        transversal_speed_bias:
          $ref: number_sampler
        transversal_speed_std_dev:
          $ref: number_sampler
        type:
          const: Odometry
        update_ego_state:
          $ref: boolean_sampler
        update_sensing_state:
          $ref: boolean_sampler
    - properties:
        field_of_view:
          $ref: number_sampler
        range:
          $ref: number_sampler
        resolution:
          $ref: integer_sampler
        start_angle:
          $ref: number_sampler
        type:
          const: pyLidar
  string_array_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          type: string
        type: array
    $id: http://navground/string_array_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  string_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        type: string
    $id: http://navground/string_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  task:
    $id: http://navground/task
    $ref: task_register
    $schema: https://json-schema.org/draft/2020-12/schema
    properties:
      type:
        type: string
    type: object
    unevaluatedProperties: false
  task_register:
    $id: http://navground/task_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        direction:
          default:
          - 1
          - 0
          description: direction
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        type:
          const: Direction
    - properties:
        points:
          default: []
          description: points
          items:
            items:
              type: number
            maxItems: 2
            minItems: 2
            type: array
          minItems: 2
          type: array
        tolerance:
          default: 1
          description: tolerance
          minimum: 0
          type: number
        type:
          const: Path
    - properties:
        loop:
          default: true
          description: loop
          type: boolean
        random:
          default: false
          description: Whether to pick the next waypoint randomly
          type: boolean
        tolerance:
          default: 1
          description: tolerance
          minimum: 0
          type: number
        type:
          const: Waypoints
        waypoints:
          default: []
          description: waypoints
          items:
            items:
              type: number
            maxItems: 2
            minItems: 2
            type: array
          minItems: 1
          type: array
    - properties:
        curve:
          default: bezier_4
          description: curve
          type: string
        follow_horizon:
          default: 0
          description: horizon
          type: number
        layer_name:
          default: ''
          description: layer
          type: string
        loop:
          default: false
          description: loop
          type: boolean
        map_path:
          default: ''
          description: map path
          type: string
        map_scale:
          default: 100
          description: map scale
          type: number
        opt_tol:
          default: 0.00999999978
          description: opt_tol
          type: number
        threaded:
          default: false
          description: compute plan in a separate thread
          type: boolean
        tolerance:
          default: 1
          description: tolerance
          type: number
        type:
          const: WaypointsWithPlanner
        waypoints:
          default:
          - - 0
            - 0
          description: waypoints
          items:
            items:
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
  task_sampler:
    $id: http://navground/task_sampler
    $ref: task_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    type: object
    unevaluatedProperties: false
  task_sampler_register:
    $id: http://navground/task_sampler_register
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - properties:
        direction:
          $ref: vector2_sampler
        type:
          const: Direction
    - properties:
        points:
          $ref: vector2_array_sampler
        tolerance:
          $ref: number_sampler
        type:
          const: Path
    - properties:
        loop:
          $ref: boolean_sampler
        random:
          $ref: boolean_sampler
        tolerance:
          $ref: number_sampler
        type:
          const: Waypoints
        waypoints:
          $ref: vector2_array_sampler
    - properties:
        curve:
          $ref: string_sampler
        follow_horizon:
          $ref: number_sampler
        layer_name:
          $ref: string_sampler
        loop:
          $ref: boolean_sampler
        map_path:
          $ref: string_sampler
        map_scale:
          $ref: number_sampler
        opt_tol:
          $ref: number_sampler
        threaded:
          $ref: boolean_sampler
        tolerance:
          $ref: number_sampler
        type:
          const: WaypointsWithPlanner
        waypoints:
          $ref: vector2_array_sampler
  uniform_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        not: true
    $id: http://navground/uniform
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      from:
        $dynamicRef: '#T'
      once:
        type: boolean
      sampler:
        const: uniform
      to:
        $dynamicRef: '#T'
    required:
    - sampler
    - from
    - to
    type: object
  vector2:
    $id: http://navground/vector2
    $schema: https://json-schema.org/draft/2020-12/schema
    items:
      type: number
    maxItems: 2
    minItems: 2
    type: array
  vector2_array_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        type: array
    $id: http://navground/vector2_array_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
  vector2_sampler:
    $defs:
      T:
        $dynamicAnchor: T
        items:
          type: number
        maxItems: 2
        minItems: 2
        type: array
    $id: http://navground/vector2_sampler
    $schema: https://json-schema.org/draft/2020-12/schema
    anyOf:
    - $ref: const
    - $ref: sequence
    - $ref: choice
    - $ref: grid
    - $ref: regular
  wall:
    $id: http://navground/wall
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      line:
        items:
          $ref: vector2
        maxItems: 2
        minItems: 2
        type: array
      uid:
        type: integer
    type: object
  world:
    $id: http://navground/world
    $schema: https://json-schema.org/draft/2020-12/schema
    additionalProperties: false
    properties:
      agents:
        items:
          $ref: agent
        type: array
      bounding_box:
        additionalProperties: false
        properties:
          max_x:
            type: number
          max_y:
            type: number
          min_x:
            type: number
          min_y:
            type: number
        type: object
      lattice:
        properties:
          x:
            items:
              type: number
            maxItems: 2
            minItems: 2
            type: array
          y:
            items:
              type: number
            maxItems: 2
            minItems: 2
            type: array
        type: object
      obstacles:
        items:
          $ref: obstacle
        type: array
      walls:
        items:
          $ref: wall
        type: array
    type: object
$id: http://navground/sim
$schema: https://json-schema.org/draft/2020-12/schema

