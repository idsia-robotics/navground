name: Build Python ðŸ“¦
on:
  workflow_call:
    inputs:
      run-id:
        type: string
        default: ${{github.run_id}}
  workflow_dispatch:
    inputs:
      run-id:
        type: string
        description: The run id
jobs:
  build_py:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04-arm
          - windows-latest
          - macos-latest
          - macos-13
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: src/navground
      - name: download navground
        uses: actions/download-artifact@v4
        with:
          name: packages-${{ runner.os }}-${{ runner.arch }}
          path: packages
          github-token: ${{ secrets.GH_PAT }}
          run-id: ${{ inputs.run-id }}
      - name: install navground
        if: runner.os == 'Windows'
        run: |
          mkdir install
          $loc = (Join-Path $PWD "install")
          $fileNames = Get-ChildItem -Path .\packages -Recurse -Include *.exe
          & $fileNames[0] /S /D=$loc
      - name: install navground
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y ./packages/*.deb
      - name: install navground
        if: runner.os == 'macOS'
        run: |
          sudo installer -allowUntrusted -verboseR -pkg packages/*.pkg -target /
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: install deps
        run: pip install wheel setuptools setuptools_git_versioning repairwheel git+https://github.com/jeguzzi/pybind11_mkdoc@rst
      - uses: ilammy/msvc-dev-cmd@v1
      - name: build wheel
        if: runner.os == 'Windows'
        run: |
          install\setup.ps1
          cd src\navground\distribution\py
          python setup.py bdist_wheel
          $fileNames = Get-ChildItem -Path dist -Recurse -Include *.whl
          repairwheel -o repaired_dist $fileNames[0]
      - name: build wheel
        if: runner.os == 'Linux'
        run: |
          source /opt/navground/setup.bash
          cd src/navground/distribution/py
          python setup.py bdist_wheel
          repairwheel -o repaired_dist dist/*.whl
      - name: build wheel
        if: runner.os == 'macOS'
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ runner.arch == 'X64' && '10.15' || '11.0' }}
          ARCH: ${{ runner.arch == 'X64' && 'x86_64' || 'arm64' }}
        run: |
          source /opt/navground/setup.bash
          cd src/navground/distribution/py
          ARCHFLAGS="-arch $ARCH" _PYTHON_HOST_PLATFORM="macosx-$MACOSX_DEPLOYMENT_TARGET-$ARCH" python setup.py bdist_wheel
          repairwheel -o repaired_dist dist/*.whl
      - name: archive wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}
          path: src/navground/distribution/py/dist/*
          if-no-files-found: error
      - name: archive repaired wheel
        uses: actions/upload-artifact@v4
        with:
          name: repaired-wheel-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}
          path: src/navground/distribution/py/repaired_dist/*
          if-no-files-found: error
