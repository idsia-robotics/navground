name: Build
on: workflow_dispatch
env:
  COLCON_DEFAULTS_FILE: src/navground/colcon/defaults.yaml
jobs:
  build_cpp:
    strategy:
      matrix:
        os:
          - ubuntu-latest 
          # - windows-latest
          # - macos-latest
    name: build navground cpp packages
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: src/navground
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'
      - run: pip install colcon-common-extensions
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: install
          key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('src/navground/colcon/deps.repos', 'src/navground/colcon/ament.repos') }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: build deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install vcstool
          vcs import --shallow --input src/navground/colcon/deps.repos
          vcs import --shallow --input src/navground/colcon/ament.repos
      - if: ${{runner.os == 'Windows' && steps.cache.outputs.cache-hit != 'true' }}
        run: |
          set COLCON_DEFAULTS_FILE=src/navground/colcon/defaults.yaml
          colcon build --metas src\navground\colcon\navground.meta --packages-up-to argparse Eigen3 YAML_CPP GEOS HighFive HDF5 pybind11 ament_cmake ament_package ament_index_cpp      
      - if: ${{runner.os != 'Windows' && steps.cache.outputs.cache-hit != 'true' }}
        run: colcon build --metas src/navground/colcon/navground.meta --packages-up-to argparse Eigen3 YAML_CPP GEOS HighFive HDF5 pybind11 ament_cmake ament_package ament_index_cpp
      - uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: install
          key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('src/navground/colcon/deps.repos', 'src/navground/colcon/ament.repos') }}   
      - if: runner.os != 'Windows'
        run: |
          source install/setup.bash
          colcon build --metas src/navground/colcon/navground.meta --packages-select navground_core navground_sim # navground_examples
      - if: runner.os == 'Windows'
        run: |
          .\install\setup.bat
          set COLCON_DEFAULTS_FILE=src/navground/colcon/defaults.yaml
          colcon build --metas src\navground\colcon\navground.meta --packages-select navground_core navground_sim # navground_examples
      - name: archive install
        uses: actions/upload-artifact@v4
        with:
          name: install-${{ runner.os }}-${{ runner.arch }}
          path: install
  build_py:
    needs: build_cpp
    name: build navground python packages
    strategy:
      matrix:
        os:
          - ubuntu-latest 
          # - windows-latest
          # - macos-latest
        python-version: ["3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: src/navground
      - uses: actions/download-artifact@v4
        with:
          name: install-${{ runner.os }}-${{ runner.arch }}
          path: install
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: pip install colcon-common-extensions wheel libclang
      - run: |
          git clone https://github.com/jeguzzi/pybind11_mkdoc.git --branch rst src/pybind11_mkdoc
          cd src/pybind11_mkdoc
          pip install .
          cd -
      - uses: ilammy/msvc-dev-cmd@v1
      - if: runner.os != 'Windows'
        run: |
          source install/setup.bash
          colcon build --metas src/navground/colcon/navground.meta --packages-select navground_core_py navground_sim_py # navground_examples_py
      - if: runner.os == 'Windows'
        run: |
          .\install\setup.bat
          set COLCON_DEFAULTS_FILE=src/navground/colcon/defaults.yaml
          colcon build --metas src\navground\colcon\navground.meta --packages-select navground_core_py navground_sim_py # navground_examples_py
      - name: archive install
        uses: actions/upload-artifact@v4
        with:
          name: install-${{ runner.os }}-${{ runner.arch }}-py${{matrix.python-version}}
          path: install
      - name: build wheel
        run: |
          source install/setup.bash
          cd src/navground/navground_py
          python setup.py bdist_wheel
      - if: runner.os == 'macOS'
        run: |
          pip install delocate
          delocate-wheel -w fixed -v dist/*.whl
      - if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -y install patchelf
          pip install auditwheel
          auditwheel repair --plat linux_aarch64 -w fixed dist/*.whl
      - if: runner.os == 'Windows'
        run: |
          pip install delvewheel
          delvewheel repair -w fixed dist/*.whl
      - name: archive wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ runner.os }}-${{ runner.arch }}-py${{matrix.python-version}}
          path: fixed/*
