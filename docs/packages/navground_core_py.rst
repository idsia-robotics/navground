=================
navground_core_py
=================

This package provides Python bindings to the core library.

Dependencies
============

- :doc:`navground_core </packages/navground_core>` the C++ library
- `Python >= 3.7 <https://www.python.org>`_ the Python runtime
- `pybind11 <https://pybind11.readthedocs.io/en/stable/>`_ for binding the C++ library
- `This fork of pybind11_mkdoc <https://github.com/jeguzzi/pybind11_mkdoc/tree/rst>`_ to extract Python docstrings from the C++ code
- `NumPy <https://numpy.org>`_ pybind11 exposes Eigen objects using `numpy`


Python packages
===============

navground.core
--------------

A Python package with navigation algorithms, controllers, and kinematics, see the :doc:`API reference </reference/core/python/index>`.

To use the package

#. add the install path to ``PYTHONPATH``

#. import the package

   .. code-block:: python

      from navground import core

Libraries
==========

navground_core_py
-----------------

A C++ headers-only library with utilities for Python bindings for internal use.

Executables
===========

.. _info_py:

info
----

Lists registered components (behaviors, kinematics, and behavior modulations).
It is equivalent to the :ref:`C++ version <info>` but with additional components implemented in Python.


.. argparse::
   :module: navground.core.info
   :func: parser
   :prog: info
   :nodefault:
   :nodescription:


Example
~~~~~~~

.. ng-command-output:: info --properties
   :package: navground_core_py
   :ellipsis: 20

.. _echo_py:

echo
----

Load and then print a YAML representation of an object (behavior, kinematic, or behavior modulation). It is equivalent to the :ref:`C++ version <echo>` but with additional components implemented in Python.


.. argparse::
   :module: navground.core.echo
   :func: parser
   :prog: echo
   :nodefault:
   :nodescription:


Example
~~~~~~~

.. ng-command-output:: echo behavior "{type: PyDummy}"
   :package: navground_core_py
   :ellipsis: 20


.. _schema_py:

schema
-------

Print JSON-Schema of YAML-convertible navground core classes. It is equivalent to the :ref:`C++ version <schema>` but with additional components implemented in Python.

.. argparse::
   :module: navground.core.print_schema
   :func: parser
   :prog: schema
   :nodescription:
   :nodefault:

Example
~~~~~~~

.. ng-command-output:: schema core
   :package: navground_core_py
   :ellipsis: 20


.. _validate_py:

validate
--------

Validates a YAML representation of an object (behavior, kinematic, or behavior modulation) against the schema generated by :ref:`schema_py` using `python-jsonschema <https://python-jsonschema.readthedocs.io>`_.

.. argparse::
   :module: navground.core.validate
   :func: parser
   :prog: validate
   :nodescription:
   :nodefault:

Example
~~~~~~~

.. ng-command-output:: validate kinematics "{type: 2WDiff, whel_axis: 1.0}"
   :package: navground_core_py
   :ellipsis: 20


.. _plugins_py:

plugins
-------

Load and list plugins.

.. argparse::
   :module: navground.core.list_plugins
   :func: parser
   :prog: plugins
   :nodescription:
   :nodefault:

Example
~~~~~~~

.. ng-command-output:: plugins
   :package: navground_core_py
   :ellipsis: 20


navground.core
--------------

Instead of 

.. code-block:: console

   $ install/lib/navground_core_py/<command> [arguments]


you can call the subcommand (``info``) from Python, like

.. code-block:: console

   $ python -m navground.core [sub-command] [arguments]

